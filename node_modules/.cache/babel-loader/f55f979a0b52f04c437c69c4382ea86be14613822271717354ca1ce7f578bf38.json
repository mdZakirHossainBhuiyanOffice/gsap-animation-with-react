{"ast":null,"code":"var _jsxFileName = \"/home/zakir/Personal/gsap/src/Components/RevertedAuto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport { TextPlugin } from \"gsap/TextPlugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngsap.registerPlugin(useGSAP, TextPlugin);\nconst RevertedAuto = () => {\n  _s();\n  const container = useRef();\n  const [isVisible, setIsVisible] = useState(false);\n  useGSAP(() => {\n    if (isVisible) {\n      gsap.to('.box', {\n        rotation: 360,\n        duration: 2\n      });\n      gsap.fromTo('.box', {\n        opacity: 0,\n        x: -350\n      }, {\n        opacity: 1,\n        x: 0,\n        duration: 2,\n        ease: TextPlugin.easeOut\n      });\n    }\n  }, {\n    scope: container,\n    dependencies: [isVisible],\n    revertOnUpdate: true\n  });\n  useEffect(() => {\n    const handleIntersection = entries => {\n      const [entry] = entries;\n      if (entry.isIntersecting) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 1\n    });\n    if (container.current) {\n      observer.observe(container.current);\n    }\n    return () => {\n      if (container.current) {\n        observer.unobserve(container.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box rounded-full\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(RevertedAuto, \"avpjKT61pLtd5fkmnY4nNBbMD5I=\", false, function () {\n  return [useGSAP];\n});\n_c = RevertedAuto;\nexport default RevertedAuto;\nvar _c;\n$RefreshReg$(_c, \"RevertedAuto\");","map":{"version":3,"names":["React","useEffect","useRef","useState","gsap","useGSAP","TextPlugin","jsxDEV","_jsxDEV","registerPlugin","RevertedAuto","_s","container","isVisible","setIsVisible","to","rotation","duration","fromTo","opacity","x","ease","easeOut","scope","dependencies","revertOnUpdate","handleIntersection","entries","entry","isIntersecting","observer","IntersectionObserver","threshold","current","observe","unobserve","ref","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/zakir/Personal/gsap/src/Components/RevertedAuto.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport gsap from 'gsap';\nimport { useGSAP } from '@gsap/react';\nimport { TextPlugin } from \"gsap/TextPlugin\";\n\ngsap.registerPlugin(useGSAP, TextPlugin);\n\nconst RevertedAuto = () => {\n    const container = useRef();\n    const [isVisible, setIsVisible] = useState(false)\n\n    useGSAP(() => {\n        if(isVisible){\n            gsap.to('.box', {\n                rotation: 360,\n                duration: 2,\n            })\n    \n            gsap.fromTo('.box',\n                { opacity: 0, x: -350 },\n                { opacity: 1, x: 0, duration: 2, ease: TextPlugin.easeOut },\n            )\n        }\n        \n    }, {\n        scope: container,\n        dependencies: [isVisible],\n        revertOnUpdate: true\n    })\n\n    useEffect(() => {\n        const handleIntersection = (entries) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n          } else {\n            setIsVisible(false)\n          }\n        };\n    \n        const observer = new IntersectionObserver(handleIntersection, {\n          threshold: 1, \n        });\n    \n        if (container.current) {\n          observer.observe(container.current);\n        }\n    \n        return () => {\n          if (container.current) {\n            observer.unobserve(container.current);\n          }\n        };\n    }, []);\n\n    return (\n        <div ref={container}>\n            <div className='box rounded-full'>Hello</div>\n        </div>\n    );\n};\n\nexport default RevertedAuto;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7CJ,IAAI,CAACK,cAAc,CAACJ,OAAO,EAAEC,UAAU,CAAC;AAExC,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGV,MAAM,CAAC,CAAC;EAC1B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDE,OAAO,CAAC,MAAM;IACV,IAAGQ,SAAS,EAAC;MACTT,IAAI,CAACW,EAAE,CAAC,MAAM,EAAE;QACZC,QAAQ,EAAE,GAAG;QACbC,QAAQ,EAAE;MACd,CAAC,CAAC;MAEFb,IAAI,CAACc,MAAM,CAAC,MAAM,EACd;QAAEC,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;MAAI,CAAC,EACvB;QAAED,OAAO,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEH,QAAQ,EAAE,CAAC;QAAEI,IAAI,EAAEf,UAAU,CAACgB;MAAQ,CAC9D,CAAC;IACL;EAEJ,CAAC,EAAE;IACCC,KAAK,EAAEX,SAAS;IAChBY,YAAY,EAAE,CAACX,SAAS,CAAC;IACzBY,cAAc,EAAE;EACpB,CAAC,CAAC;EAEFxB,SAAS,CAAC,MAAM;IACZ,MAAMyB,kBAAkB,GAAIC,OAAO,IAAK;MACtC,MAAM,CAACC,KAAK,CAAC,GAAGD,OAAO;MACvB,IAAIC,KAAK,CAACC,cAAc,EAAE;QACxBf,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAED,MAAMgB,QAAQ,GAAG,IAAIC,oBAAoB,CAACL,kBAAkB,EAAE;MAC5DM,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,IAAIpB,SAAS,CAACqB,OAAO,EAAE;MACrBH,QAAQ,CAACI,OAAO,CAACtB,SAAS,CAACqB,OAAO,CAAC;IACrC;IAEA,OAAO,MAAM;MACX,IAAIrB,SAAS,CAACqB,OAAO,EAAE;QACrBH,QAAQ,CAACK,SAAS,CAACvB,SAAS,CAACqB,OAAO,CAAC;MACvC;IACF,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIzB,OAAA;IAAK4B,GAAG,EAAExB,SAAU;IAAAyB,QAAA,eAChB7B,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd,CAAC;AAAC/B,EAAA,CArDID,YAAY;EAAA,QAIdL,OAAO;AAAA;AAAAsC,EAAA,GAJLjC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}